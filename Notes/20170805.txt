2gb ram
250gb max disk
	- thin provision: don't allocate 250 all at once
	
sysprep for clone

role-role services-features
run powershell as admin
$ get-windowsfeature # list installed/installable features

$ Install-WindowsFeature telnet-server

$ Uninstall-WindowsFeature telnet-server -remove # removes from below directory

c:\Windows\WinSxS # Windows Side-by-Side component location
	- contains features to install component packages
	- on iso/sources/sxs -- similar
	
$ Get-NetAdapter
$ Get-NetAdapter ethernet0 -- limit to single interface
$ Get-NetAdapter ethernet0 | fl * -- use format list to display all fields from ethernet0 object

$ Get-NetAdapter ethernet0 | Set-NetIPInterface -dhcp disabled
$ Get-NetAdapter ethernet0 | new-netipaddress -IPAddress 192.168.0.104 -DefaultGateway 192.168.0.1 -PrefixLength 24

$ Set-DnsClientServerAddress -InterfaceAlias ethernet0 -ServerAddress 192.168.0.100

$ help lbfo # view commands for load-balancing and fail-over team config

169.254.x.y/16 are APIPA addresses. A Windows machine will get an APIPA address if it is configured to get its IP address automatically but no DHCP server can be found

c:\Program Files\Oracle\VirtualBox\VBoxManage.exe dhcpserver add --netname intnet --ip 10.10.10.5 --netmask 255.255.255.0 --lowerip 10.10.10.10 --upperip 10.10.10.99 --enable"

$ sc query # all services
$ sc stop winrm # stop Windows Remote Management

PS> Get-Service winrm | start-service
PS> Get-Service winrm | stop-service

PS> Get-Service *remote* | select -expand name

$ sconfig.cmd -- for basic setup tasks on a single server inc. Computer/Domain name,IP/DHCP/DNS

PS> Enable-PSRemoting

$ cd\
$ cls
PS> Test-Connection -ComputerName 192.168.0.103
PS> Test-Connection -ComputerName 192.168.0.103 -Quiet -Count 1 # for True or False

PS> get-help *-net* # get list of networking-related cmdlets
PS> Get-Command -Module NETTCPIP # Get list of cmdlets from NETTCPIP module
PS> Get-NetIPAddress
PS> get-help Get-NetIPAddress -Detailed
PS> Get-NetIPAddress -AddressFamily IPv4
PS> Get-NetIPAddress -AddressFamily IPv4 | Select-Object -Property * # See all fields of info
PS> Get-NetIPInterface # list network interfaces
P>> Get-NetIPConfiguration # local active interfaces
PS> Get-NetIPConfiguration | Format-List -Property *
PS> Get-NetIPConfiguration | fl * # alias of above
PS> Get-NetIPConfiguration | Select-Object -Property * # also achieves the same thing
PS> Get-NetIPConfiguration -ComputerName <hostname>
$ route print # view local routing table
PS> Get-NetRoute
PS> get-help *-NetIPAddress # discover verbs (actions) that can be applied to NetIPAddress
$ netsh interface ipv4 show interface
# Note the following ADD a new address and do not modify existing config
$ netsh interface ipv4 add address "Ethernet0" 192.168.0.200 255.255.255.0
PS> Get-NetIPInterface -InterfaceIndex 12 -AddressFamily IPv4 | New-NetIPAddress -IPAddress 192.168.0.200 -PrefixLength 24

$ Dism /online /enable-feature /featurename:DHCPServer

PS> Get-WindowsFeature *DHCP*
PS> Install-WindowsFeature DHCP -IncludeManagementTools # set static ip first
PS> get-service -name *dhcp*

PS> Add-DhcpServerv4Scope -StartRange 192.168.3.10 -EndRange 192.168.3.20 -SubnetMask 255.255.255.0 #will be prompted for name because missing as parameter

$ Dism /online /enable-feature:DNS-Server-Full-Role
PS> get-windowsFeature *dns*
PS> Install-WindowsFeature DNS -IncludeManagementTools #managementtools includes useful cmdlets
PS> get-help *-DNS*
$ dnsmgmt # launch DNS Manager gui
$ ipconfig /flushdns

$ nslookup

Get-ADComputer
New-ADComputer | Remove-ADComputer # part of ad module

Add-Computer | Remove-Computer # native powershell
PS> Get-ADUser administrator | fl * # get all info about the AD user 'administrator'
PS> Get-ADUser administrator -Properties * | fl * # get ALL info about the AD user 'administrator'
New-ADUser | Remove-ADUser
ps> help New-ADUser # see params

The following command produces a formatted table of users with their last login date
ps> get-aduser -filter * -Properties lastlogondate,passwordlastset | ft name,lastlogondate,passwordlastset

Disabled users
ps> get-aduser -filter {enabled -ne $true}
as above
ps> Search-ADAccount -AccountDisabled
Inacctive 30 days or more (or never logged into) accounts
ps> Search-ADAccount -AccountInactive -TimeSpan 30.00:00:00

ps> csvde -f output.csv # output active directory users and computers contents to csv

ps> csvde -f output2.csv -d "cn=users,dc=contoso,dc=com" -r "(objectclass=user)"

ps> csvde -i -f output2.csv # import

$ ldifde -f output3.ldf

ps> Import-Csv newusers.csv | New-ADUser # import users in bulk from csv